/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplication2;

import Logica.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.text.TableView;
import jdk.javadoc.internal.doclets.formats.html.markup.Table;

/**
 *
 * @author a3
 */
public class MenuPrincipal extends javax.swing.JFrame {

    private Partida partida;
    boolean terminado, ganoPlayer1, simu1000=false;
    int estA = 1, estB = 3, cantPlayer1, cantPlayer2;
    DefaultTableModel modelP1,modelP2;

    /**
     * Creates new form MenuPrincipal
     */
    public MenuPrincipal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableJug1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableJug2 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnNuevaPartida = new javax.swing.JButton();
        btnDisparar = new javax.swing.JButton();
        btnTerminarPartida = new javax.swing.JButton();
        btnSimularTodos = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        radioLineal1 = new javax.swing.JRadioButton();
        radioRandom1 = new javax.swing.JRadioButton();
        radioSmart1 = new javax.swing.JRadioButton();
        radioLineal2 = new javax.swing.JRadioButton();
        radioRandom2 = new javax.swing.JRadioButton();
        radioSmart2 = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Juego"));

        tableJug1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tableJug1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tableJug1.setMinimumSize(new java.awt.Dimension(0, 0));
        jScrollPane1.setViewportView(tableJug1);

        tableJug2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tableJug2.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tableJug2.setMinimumSize(new java.awt.Dimension(0, 0));
        jScrollPane2.setViewportView(tableJug2);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 433, Short.MAX_VALUE)
                .addGap(28, 28, 28)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 547, Short.MAX_VALUE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jLabel1.setText("Player 1");

        jLabel2.setText("Player 2");

        btnNuevaPartida.setText("Nueva Partida");
        btnNuevaPartida.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnNuevaPartidaMouseClicked(evt);
            }
        });

        btnDisparar.setText("Disparar");
        btnDisparar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnDispararMouseClicked(evt);
            }
        });

        btnTerminarPartida.setText("Terminar partida");
        btnTerminarPartida.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnTerminarPartidaMouseClicked(evt);
            }
        });

        btnSimularTodos.setText("Simular 1000");
        btnSimularTodos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSimularTodosMouseClicked(evt);
            }
        });

        btnSalir.setText("Salir");

        radioLineal1.setSelected(true);
        radioLineal1.setText("Lineal");

        radioRandom1.setText("Random");

        radioSmart1.setText("Random Inteligente");

        radioLineal2.setText("Lineal");

        radioRandom2.setText("Random");

        radioSmart2.setSelected(true);
        radioSmart2.setText("Random Inteligente");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(270, 270, 270)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(radioLineal2)
                                    .addComponent(jLabel2)
                                    .addComponent(radioRandom2)
                                    .addComponent(radioSmart2))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnTerminarPartida)
                        .addGap(18, 18, 18)
                        .addComponent(btnSimularTodos)
                        .addGap(18, 18, 18)
                        .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21))))
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(radioSmart1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(radioRandom1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(radioLineal1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnNuevaPartida)
                        .addGap(71, 71, 71)
                        .addComponent(btnDisparar)
                        .addGap(57, 57, 57))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNuevaPartida)
                    .addComponent(btnDisparar)
                    .addComponent(radioLineal1)
                    .addComponent(radioLineal2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioRandom1)
                    .addComponent(radioRandom2))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSalir)
                            .addComponent(btnSimularTodos)
                            .addComponent(btnTerminarPartida))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(radioSmart1)
                            .addComponent(radioSmart2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNuevaPartidaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNuevaPartidaMouseClicked
        simu1000=false;
        iniciarPartida();
    }//GEN-LAST:event_btnNuevaPartidaMouseClicked

    private void btnDispararMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDispararMouseClicked
        disparo();        // TODO add your handling code here:
    }//GEN-LAST:event_btnDispararMouseClicked

    private void btnTerminarPartidaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTerminarPartidaMouseClicked
        terminarPartida();
    }//GEN-LAST:event_btnTerminarPartidaMouseClicked

    private void btnSimularTodosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSimularTodosMouseClicked
        disparoAll();
    }//GEN-LAST:event_btnSimularTodosMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuPrincipal().setVisible(true);

            }
        });
    }

    private void terminarPartida() {
        if (!terminado) {
            if (!partida.isFinished()) {
                partida.dispararAll();
            }
            terminado = true;
            ganoPlayer1 = partida.ganoPlayer1();
            finalizarJuego();
        }

    }

    private void disparoAll() {
        int a1=0,a2=0;
        simu1000=true;
        cantPlayer1 = 0;
        cantPlayer2 = 0;
        
        for (int i = 0; i < 1000; i++) {
            iniciarPartida();
            if (!partida.isFinished()) {
                partida.dispararAll();

            }
            terminado = true;
            ganoPlayer1 = partida.ganoPlayer1();
            if (ganoPlayer1) {
                cantPlayer1++;
                a1=(a1*(cantPlayer1-1)+partida.totales()[0])/cantPlayer1;
                
            } else {
                cantPlayer2++;
                a1=(a1*(cantPlayer2-1)+partida.totales()[1])/cantPlayer2;
                
            }
            /*if(i%5==0){
            System.out.println("van "+i);
            }*/
            
        }
        String str;
        str = "Cantidad de Victorias Player 1: " + cantPlayer1 + ".\n";
        str += "Cantidad de Victorias Player 2: " + cantPlayer2 + ".\n";
        str += "Cantidad de Disparos Promedio (cuando gana) de  Player 1: " + a1 + ".\n";
        str += "Cantidad de Disparos Promedio (cuando gana) de  Player 2: " + a2 + ".\n";
        
        
        JOptionPane.showMessageDialog(this, str);
    }

    private String obtenerEstrategias(int a) {
        switch (a) {
            case 0:
                return "Lineal.";
            case 1:
                return "Random.";
            case 2:
                return "Random Inteligente.";
            case 3:
                return "Random Inteligente por Impares.";
            default:
                return "Error";
        }
    }

    private void actualizarGrafico(int[] coord) {

    }
    
    private void actualizarGrafico(){
        modelP1.setColumnCount(100);
        modelP2.setColumnCount(100);
        
        for (int i = 0; i < 100; i++) {
            if(modelP1.getRowCount()>0){
                modelP1.removeRow(i);
                modelP2.removeRow(i);
            }
            
        }
        Celda[][] tab1=partida.getTableroA();
        Celda[][] tab2=partida.getTableroB();
        Integer[] row1 = new Integer[100];
        Integer[] row2 = new Integer[100];
        for(int i=0;i<100;i++){
            
            for(int j=0;j<100;j++){
            row1[j]=tab1[i][j].getActual();
            row2[j]=tab2[i][j].getActual();
            
            }
            modelP1.addRow(row1);
            modelP2.addRow(row2);
        }
        tableJug1.setModel(modelP1);
        tableJug2.setModel(modelP2);
    }

    private void disparo() {

        if (!partida.isFinished()) {
            partida.disparar();
            actualizarGrafico(partida.ultimoAtaqueA());
            actualizarGrafico(partida.ultimoAtaqueB());
        } else {
            actualizarGrafico();
            terminado = true;
            ganoPlayer1 = partida.ganoPlayer1();
            finalizarJuego();

        }
        
        actualizarGrafico();
        /*TableView<ObservableList<Celda>> tableView = createTableView(partida.getTabPlayer1().getTablero());
        window.setScene(new Scene(tableView));
        window.show();*/

    }

    private void finalizarJuego() {
        double[] porc = partida.porcentajesAciertos();
        int[] tots = partida.totales();

        String mensaje = "El ganador es el jugador ";
        if (ganoPlayer1) {
            mensaje += "1. Estrategia ganadora: " + obtenerEstrategias(estA) + "\n";
        } else {
            mensaje += "2. Estrategia ganadora: " + obtenerEstrategias(estB) + "\n";
        }
        if (ganoPlayer1) {
            mensaje += ("Disparos: " + tots[0] + "\n");
            mensaje += ("Aciertos: " + tots[2] + "\n");
            mensaje += ("% Aciertos: " + porc[0] + "\n");
            mensaje += ("% Errados: " + porc[2] + "\n");
        } else {
            mensaje += ("Disparos: " + tots[1] + "\n");
            mensaje += ("Aciertos: " + tots[3] + "\n");
            mensaje += ("% Aciertos: " + porc[1] + "\n");
            mensaje += ("% Errados: " + porc[3] + "\n");
        }
        JOptionPane.showMessageDialog(this, mensaje);

        //reset();
    }

    public void reset() {

    }

    private void iniciarPartida() {

        if (radioLineal1.isSelected()) {
            estA = 0;

        } else if (radioRandom1.isSelected()) {
            estA = 1;
        } else {
            estA = 2;
        }
        if (radioLineal2.isSelected()) {
            estB = 0;

        } else if (radioRandom2.isSelected()) {
            estB = 1;
        } else {
            estB = 2;
        }

        partida = new Partida(estA, estB);
        terminado = false;
        modelP1=(DefaultTableModel)tableJug1.getModel();
        modelP2=(DefaultTableModel)tableJug2.getModel();
        
        ganoPlayer1 = false;
        if(!simu1000){
            actualizarGrafico();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDisparar;
    private javax.swing.JButton btnNuevaPartida;
    private javax.swing.JButton btnSalir;
    private javax.swing.JButton btnSimularTodos;
    private javax.swing.JButton btnTerminarPartida;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JRadioButton radioLineal1;
    private javax.swing.JRadioButton radioLineal2;
    private javax.swing.JRadioButton radioRandom1;
    private javax.swing.JRadioButton radioRandom2;
    private javax.swing.JRadioButton radioSmart1;
    private javax.swing.JRadioButton radioSmart2;
    private javax.swing.JTable tableJug1;
    private javax.swing.JTable tableJug2;
    // End of variables declaration//GEN-END:variables
}
